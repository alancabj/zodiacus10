{"ast":null,"code":"var _jsxFileName = \"/Users/alanvivona/zodiacus10/src/components/ChatRoom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SOCKET_SERVER_URL = 'http://localhost:5001'; // URL backend\n// const SOCKET_SERVER_URL = 'http://172.20.10.5:5001';\n\nconst ChatRoom = ({\n  room\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]); // Mensajes del chat\n  const [users, setUsers] = useState([]); // Usuarios en la sala\n  const socketRef = useRef();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const fullName = (storedUser === null || storedUser === void 0 ? void 0 : storedUser.fullName) || 'Anónimo';\n    socketRef.current = io(SOCKET_SERVER_URL, {\n      auth: {\n        token\n      }\n    });\n\n    // Emitir joinRoom después de crear la conexión\n    socketRef.current.emit('joinRoom', {\n      room,\n      fullName\n    });\n\n    // Escuchar mensajes nuevos\n    socketRef.current.on('message', msg => {\n      console.log('Mensaje recibido en frontend:', msg);\n      setMessages(prev => [...prev, msg]);\n    });\n\n    // Escuchar actualización de usuarios en la sala\n    socketRef.current.on('roomUsers', usersList => {\n      setUsers(usersList);\n    });\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [room]);\n  const sendMessage = e => {\n    e.preventDefault();\n    console.log('Mensaje a enviar:', message);\n    if (message.trim() === '') return;\n    const user = JSON.parse(localStorage.getItem('user')) || {};\n    socketRef.current.emit('chatMessage', {\n      room,\n      text: message,\n      user: user.fullName || 'Anon',\n      timestamp: new Date().toISOString()\n    });\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Sala: \", room.charAt(0).toUpperCase() + room.slice(1)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Usuarios conectados:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), users.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay usuarios conectados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: users.map(u => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: u.fullName\n      }, u.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ccc',\n        padding: 10,\n        height: 300,\n        overflowY: 'scroll',\n        marginBottom: 10\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.text ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.user || 'Anon', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), \" \", msg.text, ' ', /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"(\", new Date(msg.timestamp).toLocaleTimeString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [msg.user || 'Anon', \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this), \" (sin texto)\", ' ', /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"(\", new Date(msg.timestamp).toLocaleTimeString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Escrib\\xED tu mensaje...\",\n        style: {\n          width: '80%',\n          padding: 8,\n          marginRight: 8\n        },\n        name: \"message\",\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          padding: '8px 16px'\n        },\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"D5Fgkq03In8AQYUjqy6OsRizyTY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useEffect","useState","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","SOCKET_SERVER_URL","ChatRoom","room","_s","message","setMessage","messages","setMessages","users","setUsers","socketRef","token","localStorage","getItem","storedUser","JSON","parse","fullName","current","auth","emit","on","msg","console","log","prev","usersList","disconnect","sendMessage","e","preventDefault","trim","user","text","timestamp","Date","toISOString","style","padding","children","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","length","map","u","id","border","height","overflowY","marginBottom","i","toLocaleTimeString","onSubmit","type","value","onChange","target","placeholder","width","marginRight","name","_c","$RefreshReg$"],"sources":["/Users/alanvivona/zodiacus10/src/components/ChatRoom.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\n\nconst SOCKET_SERVER_URL = 'http://localhost:5001'; // URL backend\n// const SOCKET_SERVER_URL = 'http://172.20.10.5:5001';\n\nconst ChatRoom = ({ room }) => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);       // Mensajes del chat\n  const [users, setUsers] = useState([]);             // Usuarios en la sala\n  const socketRef = useRef();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    const fullName = storedUser?.fullName || 'Anónimo';\n\n    socketRef.current = io(SOCKET_SERVER_URL, {\n      auth: { token },\n    });\n\n    // Emitir joinRoom después de crear la conexión\n    socketRef.current.emit('joinRoom', { room, fullName });\n\n    // Escuchar mensajes nuevos\n    socketRef.current.on('message', (msg) => {\n      console.log('Mensaje recibido en frontend:', msg);\n      setMessages((prev) => [...prev, msg]);\n    });\n\n    // Escuchar actualización de usuarios en la sala\n    socketRef.current.on('roomUsers', (usersList) => {\n      setUsers(usersList);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [room]);\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n    console.log('Mensaje a enviar:', message);\n    if (message.trim() === '') return;\n\n    const user = JSON.parse(localStorage.getItem('user')) || {};\n\n    socketRef.current.emit('chatMessage', {\n      room,\n      text: message,\n      user: user.fullName || 'Anon',\n      timestamp: new Date().toISOString(),\n    });\n\n    setMessage('');\n  };\n\n  return (\n    <div style={{ padding: 20 }}>\n      <h2>Sala: {room.charAt(0).toUpperCase() + room.slice(1)}</h2>\n\n      <h4>Usuarios conectados:</h4>\n      {users.length === 0 ? (\n        <p>No hay usuarios conectados</p>\n      ) : (\n        <ul>\n          {users.map((u) => (\n            <li key={u.id}>{u.fullName}</li>\n          ))}\n        </ul>\n      )}\n\n      <div\n        style={{\n          border: '1px solid #ccc',\n          padding: 10,\n          height: 300,\n          overflowY: 'scroll',\n          marginBottom: 10,\n        }}\n      >\n        {messages.map((msg, i) => (\n          <div key={i}>\n            {msg.text ? (\n              <>\n                <b>{msg.user || 'Anon'}:</b> {msg.text}{' '}\n                <small>({new Date(msg.timestamp).toLocaleTimeString()})</small>\n              </>\n            ) : (\n              <>\n                <b>{msg.user || 'Anon'}:</b> (sin texto){' '}\n                <small>({new Date(msg.timestamp).toLocaleTimeString()})</small>\n              </>\n            )}\n          </div>\n        ))}\n      </div>\n\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          placeholder=\"Escribí tu mensaje...\"\n          style={{ width: '80%', padding: 8, marginRight: 8 }}\n          name=\"message\"\n          id=\"message\"\n        />\n        <button type=\"submit\" style={{ padding: '8px 16px' }}>\n          Enviar\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ChatRoom;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}