{"ast":null,"code":"var _jsxFileName = \"/Users/alanvivona/zodiacus10/src/screens/LoginScreen.js\",\n  _s = $RefreshSig$();\n// screens/LoginScreen.js\n\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const navigation = useNavigation();\n  const [fullName, setFullName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleLogin = async () => {\n    if (!fullName || !password) {\n      setError('Por favor completa todos los campos.');\n      return;\n    }\n    try {\n      const response = await fetch('http://10.0.2.2:5001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          fullName,\n          password\n        })\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setError(data.message || 'Error al iniciar sesión.');\n      } else {\n        setError('');\n        navigation.navigate('ZodiacRooms', {\n          userId: data.userId\n        });\n      }\n    } catch (error) {\n      console.error('Error en login:', error);\n      setError('Error de red. Verificá la conexión con el servidor.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.title,\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Nombre completo\",\n      value: fullName,\n      onChangeText: setFullName,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: password,\n      onChangeText: setPassword,\n      style: styles.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n      title: \"Ingresar\",\n      onPress: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.registerLink,\n      onPress: () => navigation.navigate('Register'),\n      children: \"\\xBFNo ten\\xE9s cuenta? Registrate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"i0Wsmw3y0r28ldyry8/CiPOWQ6k=\", false, function () {\n  return [useNavigation];\n});\n_c = LoginScreen;\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#4B0082'\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#999',\n    padding: 10,\n    marginBottom: 15,\n    borderRadius: 5\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10\n  },\n  registerLink: {\n    marginTop: 15,\n    color: '#4B0082',\n    textAlign: 'center'\n  }\n});\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","StyleSheet","useNavigation","jsxDEV","_jsxDEV","LoginScreen","_s","navigation","fullName","setFullName","password","setPassword","error","setError","handleLogin","response","fetch","method","headers","body","JSON","stringify","data","json","ok","message","navigate","userId","console","style","styles","container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChangeText","input","secureTextEntry","onPress","registerLink","_c","create","flex","justifyContent","padding","backgroundColor","fontSize","marginBottom","textAlign","color","borderWidth","borderColor","borderRadius","marginTop","$RefreshReg$"],"sources":["/Users/alanvivona/zodiacus10/src/screens/LoginScreen.js"],"sourcesContent":["// screens/LoginScreen.js\n\nimport React, { useState } from 'react';\nimport { View, Text, TextInput, Button, StyleSheet } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nconst LoginScreen = () => {\n  const navigation = useNavigation();\n\n  const [fullName, setFullName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleLogin = async () => {\n    if (!fullName || !password) {\n      setError('Por favor completa todos los campos.');\n      return;\n    }\n\n    try {\n      const response = await fetch('http://10.0.2.2:5001/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ fullName, password }),\n      });\n\n      const data = await response.json();\n\n      if (!response.ok) {\n        setError(data.message || 'Error al iniciar sesión.');\n      } else {\n        setError('');\n        navigation.navigate('ZodiacRooms', { userId: data.userId });\n      }\n    } catch (error) {\n      console.error('Error en login:', error);\n      setError('Error de red. Verificá la conexión con el servidor.');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Iniciar Sesión</Text>\n\n      <TextInput\n        placeholder=\"Nombre completo\"\n        value={fullName}\n        onChangeText={setFullName}\n        style={styles.input}\n      />\n\n      <TextInput\n        placeholder=\"Contraseña\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        style={styles.input}\n      />\n\n      {error ? <Text style={styles.error}>{error}</Text> : null}\n\n      <Button title=\"Ingresar\" onPress={handleLogin} />\n\n      <Text\n        style={styles.registerLink}\n        onPress={() => navigation.navigate('Register')}\n      >\n        ¿No tenés cuenta? Registrate\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    marginBottom: 20,\n    textAlign: 'center',\n    color: '#4B0082',\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#999',\n    padding: 10,\n    marginBottom: 15,\n    borderRadius: 5,\n  },\n  error: {\n    color: 'red',\n    marginBottom: 10,\n  },\n  registerLink: {\n    marginTop: 15,\n    color: '#4B0082',\n    textAlign: 'center',\n  },\n});\n\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}