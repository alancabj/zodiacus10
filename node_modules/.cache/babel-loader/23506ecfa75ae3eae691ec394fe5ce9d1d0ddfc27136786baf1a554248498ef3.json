{"ast":null,"code":"var _jsxFileName = \"/Users/alanvivona/zodiacus10/src/screens/LoginScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginScreen = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useContext(AuthContext);\n  const [formData, setFormData] = useState({\n    fullName: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:5001/api/auth/login', formData);\n      const data = response.data;\n      if (data && data.userId) {\n        login(data.userId, data.zodiacSign);\n        navigate('/rooms');\n      } else {\n        setError('Error en los datos recibidos.');\n      }\n    } catch (err) {\n      console.error('Error en login:', err);\n      setError('Credenciales incorrectas o error de conexi칩n.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Iniciar Sesi\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fullName\",\n        placeholder: \"Nombre completo\",\n        value: formData.fullName,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Contrase\\xF1a\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Ingresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginScreen, \"JalGNBxOYPBZinZgVPQsZ0Ekbaw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginScreen;\nexport default LoginScreen;\nvar _c;\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","axios","AuthContext","jsxDEV","_jsxDEV","LoginScreen","_s","navigate","login","formData","setFormData","fullName","password","error","setError","handleChange","e","target","name","value","handleLogin","preventDefault","response","post","data","userId","zodiacSign","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","style","color","_c","$RefreshReg$"],"sources":["/Users/alanvivona/zodiacus10/src/screens/LoginScreen.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { AuthContext } from '../context/AuthContext';\n\nconst LoginScreen = () => {\n  const navigate = useNavigate();\n  const { login } = useContext(AuthContext);\n\n  const [formData, setFormData] = useState({\n    fullName: '',\n    password: '',\n  });\n\n  const [error, setError] = useState('');\n\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await axios.post('http://localhost:5001/api/auth/login', formData);\n      const data = response.data;\n\n      if (data && data.userId) {\n        login(data.userId, data.zodiacSign);\n        navigate('/rooms');\n      } else {\n        setError('Error en los datos recibidos.');\n      }\n    } catch (err) {\n      console.error('Error en login:', err);\n      setError('Credenciales incorrectas o error de conexi칩n.');\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <h2>Iniciar Sesi칩n</h2>\n      <form onSubmit={handleLogin}>\n        <input\n          type=\"text\"\n          name=\"fullName\"\n          placeholder=\"Nombre completo\"\n          value={formData.fullName}\n          onChange={handleChange}\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Contrase침a\"\n          value={formData.password}\n          onChange={handleChange}\n          required\n        />\n        <button type=\"submit\">Ingresar</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n};\n\nexport default LoginScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}